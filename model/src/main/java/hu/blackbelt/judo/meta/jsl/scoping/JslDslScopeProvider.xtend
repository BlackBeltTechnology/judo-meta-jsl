/*
 * generated by Xtext 2.26.0
 */
package hu.blackbelt.judo.meta.jsl.scoping

import com.google.inject.Inject
import org.eclipse.xtext.resource.IResourceDescription
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class JslDslScopeProvider extends AbstractJslDslScopeProvider {

	/*
    override getScope(EObject object, EReference ref) {
        if (ref == JsldslPackage.Literals.) {
            val call = object as Call
            return Scopes.scopeFor(call.instance.type.defs) 
        }
        return super.getScope(object, ref)
    } 
    */
    
    @Inject IResourceDescription.Manager mgr;
    
    override getScope(EObject context, EReference ref) {
		
		// System.out.println("JslDslLocalScopeProvider.getScope="+ context.toString + " for " + ref.toString);
		
        return super.getScope(context, ref)
    }

}
